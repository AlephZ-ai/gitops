apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: argo
spec:
  entrypoint: main
  volumeClaimTemplates:
    - metadata:
        name: work
      spec:
        accessModes: ['ReadWriteOnce']
        resources:
          requests:
            storage: 64Mi
  serviceAccountName: argo-server
  templates:
    - name: main
      steps:
        - - name: preload-docker-config
            template: create-docker-config
        - - name: publish-container
            templateRef:
              name: cwft-buildkit
              template: build-push
              clusterScope: true
            arguments:
              artifacts:
                - name: docker-config
                  from: '{{steps.preload-docker-config.outputs.artifacts.docker-config}}'
              parameters:
                - name: appName
                  value: '{{workflow.parameters.appName}}'
                - name: branch
                  value: '{{workflow.parameters.branch}}'
                - name: containerRegistryURL
                  value: '{{workflow.parameters.containerRegistryURL}}'
                - name: gitUrlNoProtocol
                  value: '{{workflow.parameters.gitUrlNoProtocol}}'
                - name: gitlabRegistryAuth
                  value: '{{workflow.parameters.gitlabRegistryAuth}}'
        - - name: checkout
            templateRef:
              name: cwft-git
              template: checkout-with-gitops
              clusterScope: true
            arguments:
              parameters:
                - name: appName
                  value: '{{workflow.parameters.appName}}'
                - name: branch
                  value: '{{workflow.parameters.branch}}'
                - name: gitUrlNoProtocol
                  value: '{{workflow.parameters.gitUrlNoProtocol}}'
        - - name: get-initial-chart-version
            templateRef:
              name: cwft-helm
              template: get-chart-version
              clusterScope: true
            arguments:
              artifacts:
                - name: repo-source
                  from: '{{steps.checkout.outputs.artifacts.repo-source}}'
              parameters:
                - name: appName
                  value: '{{workflow.parameters.appName}}'
                - name: chartDir
                  value: 'charts/{{workflow.parameters.appName}}'
        - - name: set-chart-versions
            templateRef:
              name: cwft-helm
              template: set-chart-versions
              clusterScope: true
            arguments:
              artifacts:
                - name: repo-source
                  from: '{{steps.checkout.outputs.artifacts.repo-source}}'
              parameters:
                - name: appName
                  value: '{{workflow.parameters.appName}}'
                - name: chartDir
                  value: 'charts/{{workflow.parameters.appName}}'
                - name: chartVersion
                  value: '{{steps.get-initial-chart-version.outputs.result}}-rc.{{workflow.parameters.shortSha}}'
                - name: shortSha
                  value: '{{workflow.parameters.shortSha}}'
        - - name: publish-helm-chart
            templateRef:
              name: cwft-helm
              template: publish-chart
              clusterScope: true
            arguments:
              artifacts:
                - name: repo-source
                  from: '{{steps.set-chart-versions.outputs.artifacts.repo-source}}'
              parameters:
                - name: appName
                  value: '{{workflow.parameters.appName}}'
                - name: chartDir
                  value: 'charts/{{workflow.parameters.appName}}'
    - name: create-docker-config
      inputs:
        parameters:
          - name: docker-config
            value: '{{workflow.parameters.gitlabRegistryAuth}}'
      container:
        image: kubefirst/chubbo:0.2
        command: ['bash', '-c']
        args:
          ['echo {{inputs.parameters.docker-config}} | tee /tmp/config.json']
      outputs:
        artifacts:
          - name: docker-config
            path: /tmp/config.json
